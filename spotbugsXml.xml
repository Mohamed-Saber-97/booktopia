<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1724520669526' version='4.8.6' timestamp='1724520669526'><Project projectName='Booktopia'><Jar>/home/runner/work/booktopia/booktopia/target/classes</Jar><AuxClasspathEntry>/home/runner/.m2/repository/org/hibernate/orm/hibernate-core/6.6.0.Final/hibernate-core-6.6.0.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/com/mysql/mysql-connector-j/9.0.0/mysql-connector-j-9.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/com/google/protobuf/protobuf-java/4.26.1/protobuf-java-4.26.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/org/hibernate/orm/hibernate-hikaricp/6.6.0.Final/hibernate-hikaricp-6.6.0.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/org/projectlombok/lombok/1.18.34/lombok-1.18.34.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/home/runner/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar</AuxClasspathEntry><SrcDir>/home/runner/work/booktopia/booktopia/src/main/java</SrcDir><WrkDir>/home/runner/work/booktopia/booktopia/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='9690b27bb97eeceae4fd05b3a6e279ff' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>model.Account.getAddress() may expose internal representation by returning Account.address</LongMessage><Class classname='model.Account' classAnnotationNames='jakarta.persistence.Embeddable' primary='true'><SourceLine classname='model.Account' start='10' end='29' sourcepath='model/Account.java' sourcefile='Account.java'><Message>At Account.java:[lines 10-29]</Message></SourceLine><Message>In class model.Account</Message></Class><Method isStatic='false' classname='model.Account' signature='()Lmodel/Address;' name='getAddress' classAnnotationNames='jakarta.persistence.Embeddable' primary='true'><SourceLine endBytecode='46' classname='model.Account' start='29' end='29' sourcepath='model/Account.java' sourcefile='Account.java' startBytecode='0'></SourceLine><Message>In method model.Account.getAddress()</Message></Method><Field isStatic='false' classname='model.Account' signature='Lmodel/Address;' name='address' classAnnotationNames='jakarta.persistence.Embeddable' primary='true'><SourceLine classname='model.Account' sourcepath='model/Account.java' sourcefile='Account.java'><Message>In Account.java</Message></SourceLine><Message>Field model.Account.address</Message></Field><SourceLine endBytecode='4' classname='model.Account' start='29' end='29' sourcepath='model/Account.java' sourcefile='Account.java' startBytecode='4' primary='true'><Message>At Account.java:[line 29]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='30d750c9e6aa92fe94f050f3a73311c5' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>model.Account.setAddress(Address) may expose internal representation by storing an externally mutable object into Account.address</LongMessage><Class classname='model.Account' classAnnotationNames='jakarta.persistence.Embeddable' primary='true'><SourceLine classname='model.Account' start='10' end='29' sourcepath='model/Account.java' sourcefile='Account.java'><Message>At Account.java:[lines 10-29]</Message></SourceLine><Message>In class model.Account</Message></Class><Method isStatic='false' classname='model.Account' signature='(Lmodel/Address;)V' name='setAddress' classAnnotationNames='jakarta.persistence.Embeddable' primary='true'><SourceLine endBytecode='57' classname='model.Account' start='10' end='10' sourcepath='model/Account.java' sourcefile='Account.java' startBytecode='0'></SourceLine><Message>In method model.Account.setAddress(Address)</Message></Method><Field isStatic='false' classname='model.Account' signature='Lmodel/Address;' name='address' classAnnotationNames='jakarta.persistence.Embeddable' primary='true'><SourceLine classname='model.Account' sourcepath='model/Account.java' sourcefile='Account.java'><Message>In Account.java</Message></SourceLine><Message>Field model.Account.address</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='2' name='address' register='1'><Message>Local variable named address</Message></LocalVariable><SourceLine endBytecode='2' classname='model.Account' start='10' end='10' sourcepath='model/Account.java' sourcefile='Account.java' startBytecode='2' primary='true'><Message>At Account.java:[line 10]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='107dea71b54f4083d721c51a6b3fe660' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>model.Admin.getAccount() may expose internal representation by returning Admin.account</LongMessage><Class classname='model.Admin' classAnnotationNames='jakarta.persistence.Entity,jakarta.persistence.Table' primary='true'><SourceLine classname='model.Admin' start='8' end='14' sourcepath='model/Admin.java' sourcefile='Admin.java'><Message>At Admin.java:[lines 8-14]</Message></SourceLine><Message>In class model.Admin</Message></Class><Method isStatic='false' classname='model.Admin' signature='()Lmodel/Account;' name='getAccount' classAnnotationNames='jakarta.persistence.Entity,jakarta.persistence.Table' primary='true'><SourceLine endBytecode='46' classname='model.Admin' start='14' end='14' sourcepath='model/Admin.java' sourcefile='Admin.java' startBytecode='0'></SourceLine><Message>In method model.Admin.getAccount()</Message></Method><Field isStatic='false' classname='model.Admin' signature='Lmodel/Account;' name='account' classAnnotationNames='jakarta.persistence.Entity,jakarta.persistence.Table' primary='true'><SourceLine classname='model.Admin' sourcepath='model/Admin.java' sourcefile='Admin.java'><Message>In Admin.java</Message></SourceLine><Message>Field model.Admin.account</Message></Field><SourceLine endBytecode='4' classname='model.Admin' start='14' end='14' sourcepath='model/Admin.java' sourcefile='Admin.java' startBytecode='4' primary='true'><Message>At Admin.java:[line 14]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='50fc9411718ac67dcc32f965f5134ec5' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>model.Admin.setAccount(Account) may expose internal representation by storing an externally mutable object into Admin.account</LongMessage><Class classname='model.Admin' classAnnotationNames='jakarta.persistence.Entity,jakarta.persistence.Table' primary='true'><SourceLine classname='model.Admin' start='8' end='14' sourcepath='model/Admin.java' sourcefile='Admin.java'><Message>At Admin.java:[lines 8-14]</Message></SourceLine><Message>In class model.Admin</Message></Class><Method isStatic='false' classname='model.Admin' signature='(Lmodel/Account;)V' name='setAccount' classAnnotationNames='jakarta.persistence.Entity,jakarta.persistence.Table' primary='true'><SourceLine endBytecode='57' classname='model.Admin' start='8' end='8' sourcepath='model/Admin.java' sourcefile='Admin.java' startBytecode='0'></SourceLine><Message>In method model.Admin.setAccount(Account)</Message></Method><Field isStatic='false' classname='model.Admin' signature='Lmodel/Account;' name='account' classAnnotationNames='jakarta.persistence.Entity,jakarta.persistence.Table' primary='true'><SourceLine classname='model.Admin' sourcepath='model/Admin.java' sourcefile='Admin.java'><Message>In Admin.java</Message></SourceLine><Message>Field model.Admin.account</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='2' name='account' register='1'><Message>Local variable named account</Message></LocalVariable><SourceLine endBytecode='2' classname='model.Admin' start='8' end='8' sourcepath='model/Admin.java' sourcefile='Admin.java' startBytecode='2' primary='true'><Message>At Admin.java:[line 8]</Message></SourceLine></BugInstance><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugPattern cweid='374' abbrev='EI2' category='MALICIOUS_CODE' type='EI_EXPOSE_REP2'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='374' abbrev='EI' category='MALICIOUS_CODE' type='EI_EXPOSE_REP'><ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription><Details>

  &lt;p&gt; Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='EI'><Description>Method returning array may expose internal representation</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='0' priority_2='4' total_size='0' clock_seconds='2.68' referenced_classes='0' vm_version='22.0.2+9' total_bugs='4' java_version='22.0.2' gc_seconds='0.04' alloc_mbytes='512.00' cpu_seconds='9.17' peak_mbytes='243.54' timestamp='Sat, 24 Aug 2024 17:31:09 +0000'><FileStats path='model/Account.java' size='0' bugHash='ae427b5ee655d91ffa5d807accc5a971' bugCount='2'></FileStats><FileStats path='model/Admin.java' size='0' bugHash='055fef27d26f16f02c4d2c9291d033f7' bugCount='2'></FileStats><FindBugsProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>